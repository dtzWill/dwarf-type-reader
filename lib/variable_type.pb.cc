// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable_type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "variable_type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace VariableType {

namespace {

const ::google::protobuf::Descriptor* Variables_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Variables_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalVariable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalVariable_reflection_ = NULL;
const ::google::protobuf::Descriptor* LocalVariable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocalVariable_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Type_metaType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* FieldType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldType_reflection_ = NULL;
const ::google::protobuf::Descriptor* Function_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Function_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_variable_5ftype_2eproto() {
  protobuf_AddDesc_variable_5ftype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "variable_type.proto");
  GOOGLE_CHECK(file != NULL);
  Variables_descriptor_ = file->message_type(0);
  static const int Variables_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variables, local_variables_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variables, global_variables_),
  };
  Variables_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Variables_descriptor_,
      Variables::default_instance_,
      Variables_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variables, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Variables, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Variables));
  GlobalVariable_descriptor_ = file->message_type(1);
  static const int GlobalVariable_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalVariable, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalVariable, name_),
  };
  GlobalVariable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalVariable_descriptor_,
      GlobalVariable::default_instance_,
      GlobalVariable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalVariable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalVariable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalVariable));
  LocalVariable_descriptor_ = file->message_type(2);
  static const int LocalVariable_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, scope_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, is_formal_parameter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, offset_from_frame_base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, name_),
  };
  LocalVariable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LocalVariable_descriptor_,
      LocalVariable::default_instance_,
      LocalVariable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalVariable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LocalVariable));
  Type_descriptor_ = file->message_type(3);
  static const int Type_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, c_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, element_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, member_list_),
  };
  Type_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Type_descriptor_,
      Type::default_instance_,
      Type_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Type));
  Type_metaType_descriptor_ = Type_descriptor_->enum_type(0);
  FieldType_descriptor_ = file->message_type(4);
  static const int FieldType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, field_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, field_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, field_name_),
  };
  FieldType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FieldType_descriptor_,
      FieldType::default_instance_,
      FieldType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FieldType));
  Function_descriptor_ = file->message_type(5);
  static const int Function_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, entry_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, symbol_name_),
  };
  Function_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Function_descriptor_,
      Function::default_instance_,
      Function_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Function, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Function));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_variable_5ftype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Variables_descriptor_, &Variables::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalVariable_descriptor_, &GlobalVariable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LocalVariable_descriptor_, &LocalVariable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Type_descriptor_, &Type::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FieldType_descriptor_, &FieldType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Function_descriptor_, &Function::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_variable_5ftype_2eproto() {
  delete Variables::default_instance_;
  delete Variables_reflection_;
  delete GlobalVariable::default_instance_;
  delete GlobalVariable_reflection_;
  delete LocalVariable::default_instance_;
  delete LocalVariable_reflection_;
  delete Type::default_instance_;
  delete Type_reflection_;
  delete FieldType::default_instance_;
  delete FieldType_reflection_;
  delete Function::default_instance_;
  delete Function_reflection_;
}

void protobuf_AddDesc_variable_5ftype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023variable_type.proto\022\014VariableType\"y\n\tV"
    "ariables\0224\n\017local_variables\030\001 \003(\0132\033.Vari"
    "ableType.LocalVariable\0226\n\020global_variabl"
    "es\030\002 \003(\0132\034.VariableType.GlobalVariable\"@"
    "\n\016GlobalVariable\022 \n\004type\030\001 \002(\0132\022.Variabl"
    "eType.Type\022\014\n\004name\030\002 \002(\t\"\243\001\n\rLocalVariab"
    "le\022%\n\005scope\030\001 \002(\0132\026.VariableType.Functio"
    "n\022\033\n\023is_formal_parameter\030\002 \002(\010\022 \n\004type\030\003"
    " \002(\0132\022.VariableType.Type\022\036\n\026offset_from_"
    "frame_base\030\004 \001(\003\022\014\n\004name\030\005 \002(\t\"\372\001\n\004Type\022"
    "\014\n\004size\030\001 \002(\003\022\016\n\006c_type\030\002 \002(\t\022)\n\004kind\030\003 "
    "\002(\0162\033.VariableType.Type.metaType\022(\n\014elem"
    "ent_type\030\004 \001(\0132\022.VariableType.Type\022\r\n\005co"
    "unt\030\005 \001(\003\022,\n\013member_list\030\006 \003(\0132\027.Variabl"
    "eType.FieldType\"B\n\010metaType\022\014\n\010isScalar\020"
    "\000\022\r\n\tisPointer\020\001\022\013\n\007isArray\020\002\022\014\n\010isStruc"
    "t\020\003\"]\n\tFieldType\022\024\n\014field_offset\030\001 \002(\003\022&"
    "\n\nfield_type\030\002 \002(\0132\022.VariableType.Type\022\022"
    "\n\nfield_name\030\003 \002(\t\"6\n\010Function\022\025\n\rentry_"
    "address\030\002 \002(\003\022\023\n\013symbol_name\030\003 \001(\t", 794);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "variable_type.proto", &protobuf_RegisterTypes);
  Variables::default_instance_ = new Variables();
  GlobalVariable::default_instance_ = new GlobalVariable();
  LocalVariable::default_instance_ = new LocalVariable();
  Type::default_instance_ = new Type();
  FieldType::default_instance_ = new FieldType();
  Function::default_instance_ = new Function();
  Variables::default_instance_->InitAsDefaultInstance();
  GlobalVariable::default_instance_->InitAsDefaultInstance();
  LocalVariable::default_instance_->InitAsDefaultInstance();
  Type::default_instance_->InitAsDefaultInstance();
  FieldType::default_instance_->InitAsDefaultInstance();
  Function::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_variable_5ftype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_variable_5ftype_2eproto {
  StaticDescriptorInitializer_variable_5ftype_2eproto() {
    protobuf_AddDesc_variable_5ftype_2eproto();
  }
} static_descriptor_initializer_variable_5ftype_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Variables::kLocalVariablesFieldNumber;
const int Variables::kGlobalVariablesFieldNumber;
#endif  // !_MSC_VER

Variables::Variables()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.Variables)
}

void Variables::InitAsDefaultInstance() {
}

Variables::Variables(const Variables& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.Variables)
}

void Variables::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Variables::~Variables() {
  // @@protoc_insertion_point(destructor:VariableType.Variables)
  SharedDtor();
}

void Variables::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Variables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variables::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Variables_descriptor_;
}

const Variables& Variables::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

Variables* Variables::default_instance_ = NULL;

Variables* Variables::New() const {
  return new Variables;
}

void Variables::Clear() {
  local_variables_.Clear();
  global_variables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Variables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.Variables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .VariableType.LocalVariable local_variables = 1;
      case 1: {
        if (tag == 10) {
         parse_local_variables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_local_variables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_local_variables;
        if (input->ExpectTag(18)) goto parse_global_variables;
        break;
      }

      // repeated .VariableType.GlobalVariable global_variables = 2;
      case 2: {
        if (tag == 18) {
         parse_global_variables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_global_variables()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_global_variables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.Variables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.Variables)
  return false;
#undef DO_
}

void Variables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.Variables)
  // repeated .VariableType.LocalVariable local_variables = 1;
  for (int i = 0; i < this->local_variables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->local_variables(i), output);
  }

  // repeated .VariableType.GlobalVariable global_variables = 2;
  for (int i = 0; i < this->global_variables_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->global_variables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.Variables)
}

::google::protobuf::uint8* Variables::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.Variables)
  // repeated .VariableType.LocalVariable local_variables = 1;
  for (int i = 0; i < this->local_variables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->local_variables(i), target);
  }

  // repeated .VariableType.GlobalVariable global_variables = 2;
  for (int i = 0; i < this->global_variables_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->global_variables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.Variables)
  return target;
}

int Variables::ByteSize() const {
  int total_size = 0;

  // repeated .VariableType.LocalVariable local_variables = 1;
  total_size += 1 * this->local_variables_size();
  for (int i = 0; i < this->local_variables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->local_variables(i));
  }

  // repeated .VariableType.GlobalVariable global_variables = 2;
  total_size += 1 * this->global_variables_size();
  for (int i = 0; i < this->global_variables_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->global_variables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variables::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Variables* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Variables*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Variables::MergeFrom(const Variables& from) {
  GOOGLE_CHECK_NE(&from, this);
  local_variables_.MergeFrom(from.local_variables_);
  global_variables_.MergeFrom(from.global_variables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Variables::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variables::CopyFrom(const Variables& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variables::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->local_variables())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->global_variables())) return false;
  return true;
}

void Variables::Swap(Variables* other) {
  if (other != this) {
    local_variables_.Swap(&other->local_variables_);
    global_variables_.Swap(&other->global_variables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Variables::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Variables_descriptor_;
  metadata.reflection = Variables_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalVariable::kTypeFieldNumber;
const int GlobalVariable::kNameFieldNumber;
#endif  // !_MSC_VER

GlobalVariable::GlobalVariable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.GlobalVariable)
}

void GlobalVariable::InitAsDefaultInstance() {
  type_ = const_cast< ::VariableType::Type*>(&::VariableType::Type::default_instance());
}

GlobalVariable::GlobalVariable(const GlobalVariable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.GlobalVariable)
}

void GlobalVariable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = NULL;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalVariable::~GlobalVariable() {
  // @@protoc_insertion_point(destructor:VariableType.GlobalVariable)
  SharedDtor();
}

void GlobalVariable::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete type_;
  }
}

void GlobalVariable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalVariable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalVariable_descriptor_;
}

const GlobalVariable& GlobalVariable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

GlobalVariable* GlobalVariable::default_instance_ = NULL;

GlobalVariable* GlobalVariable::New() const {
  return new GlobalVariable;
}

void GlobalVariable::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_type()) {
      if (type_ != NULL) type_->::VariableType::Type::Clear();
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.GlobalVariable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .VariableType.Type type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.GlobalVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.GlobalVariable)
  return false;
#undef DO_
}

void GlobalVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.GlobalVariable)
  // required .VariableType.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->type(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.GlobalVariable)
}

::google::protobuf::uint8* GlobalVariable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.GlobalVariable)
  // required .VariableType.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->type(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.GlobalVariable)
  return target;
}

int GlobalVariable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .VariableType.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }

    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalVariable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalVariable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalVariable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalVariable::MergeFrom(const GlobalVariable& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      mutable_type()->::VariableType::Type::MergeFrom(from.type());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalVariable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalVariable::CopyFrom(const GlobalVariable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalVariable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_type()) {
    if (!this->type().IsInitialized()) return false;
  }
  return true;
}

void GlobalVariable::Swap(GlobalVariable* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalVariable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalVariable_descriptor_;
  metadata.reflection = GlobalVariable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LocalVariable::kScopeFieldNumber;
const int LocalVariable::kIsFormalParameterFieldNumber;
const int LocalVariable::kTypeFieldNumber;
const int LocalVariable::kOffsetFromFrameBaseFieldNumber;
const int LocalVariable::kNameFieldNumber;
#endif  // !_MSC_VER

LocalVariable::LocalVariable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.LocalVariable)
}

void LocalVariable::InitAsDefaultInstance() {
  scope_ = const_cast< ::VariableType::Function*>(&::VariableType::Function::default_instance());
  type_ = const_cast< ::VariableType::Type*>(&::VariableType::Type::default_instance());
}

LocalVariable::LocalVariable(const LocalVariable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.LocalVariable)
}

void LocalVariable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  scope_ = NULL;
  is_formal_parameter_ = false;
  type_ = NULL;
  offset_from_frame_base_ = GOOGLE_LONGLONG(0);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocalVariable::~LocalVariable() {
  // @@protoc_insertion_point(destructor:VariableType.LocalVariable)
  SharedDtor();
}

void LocalVariable::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
    delete scope_;
    delete type_;
  }
}

void LocalVariable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalVariable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocalVariable_descriptor_;
}

const LocalVariable& LocalVariable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

LocalVariable* LocalVariable::default_instance_ = NULL;

LocalVariable* LocalVariable::New() const {
  return new LocalVariable;
}

void LocalVariable::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_scope()) {
      if (scope_ != NULL) scope_->::VariableType::Function::Clear();
    }
    is_formal_parameter_ = false;
    if (has_type()) {
      if (type_ != NULL) type_->::VariableType::Type::Clear();
    }
    offset_from_frame_base_ = GOOGLE_LONGLONG(0);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LocalVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.LocalVariable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .VariableType.Function scope = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scope()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_formal_parameter;
        break;
      }

      // required bool is_formal_parameter = 2;
      case 2: {
        if (tag == 16) {
         parse_is_formal_parameter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_formal_parameter_)));
          set_has_is_formal_parameter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // required .VariableType.Type type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset_from_frame_base;
        break;
      }

      // optional int64 offset_from_frame_base = 4;
      case 4: {
        if (tag == 32) {
         parse_offset_from_frame_base:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_from_frame_base_)));
          set_has_offset_from_frame_base();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // required string name = 5;
      case 5: {
        if (tag == 42) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.LocalVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.LocalVariable)
  return false;
#undef DO_
}

void LocalVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.LocalVariable)
  // required .VariableType.Function scope = 1;
  if (has_scope()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->scope(), output);
  }

  // required bool is_formal_parameter = 2;
  if (has_is_formal_parameter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_formal_parameter(), output);
  }

  // required .VariableType.Type type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->type(), output);
  }

  // optional int64 offset_from_frame_base = 4;
  if (has_offset_from_frame_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->offset_from_frame_base(), output);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.LocalVariable)
}

::google::protobuf::uint8* LocalVariable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.LocalVariable)
  // required .VariableType.Function scope = 1;
  if (has_scope()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->scope(), target);
  }

  // required bool is_formal_parameter = 2;
  if (has_is_formal_parameter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_formal_parameter(), target);
  }

  // required .VariableType.Type type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->type(), target);
  }

  // optional int64 offset_from_frame_base = 4;
  if (has_offset_from_frame_base()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->offset_from_frame_base(), target);
  }

  // required string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.LocalVariable)
  return target;
}

int LocalVariable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .VariableType.Function scope = 1;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scope());
    }

    // required bool is_formal_parameter = 2;
    if (has_is_formal_parameter()) {
      total_size += 1 + 1;
    }

    // required .VariableType.Type type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }

    // optional int64 offset_from_frame_base = 4;
    if (has_offset_from_frame_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->offset_from_frame_base());
    }

    // required string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalVariable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LocalVariable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LocalVariable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LocalVariable::MergeFrom(const LocalVariable& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scope()) {
      mutable_scope()->::VariableType::Function::MergeFrom(from.scope());
    }
    if (from.has_is_formal_parameter()) {
      set_is_formal_parameter(from.is_formal_parameter());
    }
    if (from.has_type()) {
      mutable_type()->::VariableType::Type::MergeFrom(from.type());
    }
    if (from.has_offset_from_frame_base()) {
      set_offset_from_frame_base(from.offset_from_frame_base());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LocalVariable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalVariable::CopyFrom(const LocalVariable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalVariable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000017) != 0x00000017) return false;

  if (has_scope()) {
    if (!this->scope().IsInitialized()) return false;
  }
  if (has_type()) {
    if (!this->type().IsInitialized()) return false;
  }
  return true;
}

void LocalVariable::Swap(LocalVariable* other) {
  if (other != this) {
    std::swap(scope_, other->scope_);
    std::swap(is_formal_parameter_, other->is_formal_parameter_);
    std::swap(type_, other->type_);
    std::swap(offset_from_frame_base_, other->offset_from_frame_base_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LocalVariable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocalVariable_descriptor_;
  metadata.reflection = LocalVariable_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Type_metaType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_metaType_descriptor_;
}
bool Type_metaType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Type_metaType Type::isScalar;
const Type_metaType Type::isPointer;
const Type_metaType Type::isArray;
const Type_metaType Type::isStruct;
const Type_metaType Type::metaType_MIN;
const Type_metaType Type::metaType_MAX;
const int Type::metaType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Type::kSizeFieldNumber;
const int Type::kCTypeFieldNumber;
const int Type::kKindFieldNumber;
const int Type::kElementTypeFieldNumber;
const int Type::kCountFieldNumber;
const int Type::kMemberListFieldNumber;
#endif  // !_MSC_VER

Type::Type()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.Type)
}

void Type::InitAsDefaultInstance() {
  element_type_ = const_cast< ::VariableType::Type*>(&::VariableType::Type::default_instance());
}

Type::Type(const Type& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.Type)
}

void Type::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  size_ = GOOGLE_LONGLONG(0);
  c_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  element_type_ = NULL;
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:VariableType.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  if (c_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete c_type_;
  }
  if (this != default_instance_) {
    delete element_type_;
  }
}

void Type::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_descriptor_;
}

const Type& Type::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

Type* Type::default_instance_ = NULL;

Type* Type::New() const {
  return new Type;
}

void Type::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    size_ = GOOGLE_LONGLONG(0);
    if (has_c_type()) {
      if (c_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        c_type_->clear();
      }
    }
    kind_ = 0;
    if (has_element_type()) {
      if (element_type_ != NULL) element_type_->::VariableType::Type::Clear();
    }
    count_ = GOOGLE_LONGLONG(0);
  }
  member_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.Type)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_c_type;
        break;
      }

      // required string c_type = 2;
      case 2: {
        if (tag == 18) {
         parse_c_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_c_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->c_type().data(), this->c_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "c_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_kind;
        break;
      }

      // required .VariableType.Type.metaType kind = 3;
      case 3: {
        if (tag == 24) {
         parse_kind:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::VariableType::Type_metaType_IsValid(value)) {
            set_kind(static_cast< ::VariableType::Type_metaType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_element_type;
        break;
      }

      // optional .VariableType.Type element_type = 4;
      case 4: {
        if (tag == 34) {
         parse_element_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_element_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_count;
        break;
      }

      // optional int64 count = 5;
      case 5: {
        if (tag == 40) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_member_list;
        break;
      }

      // repeated .VariableType.FieldType member_list = 6;
      case 6: {
        if (tag == 50) {
         parse_member_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_member_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_member_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.Type)
  // required int64 size = 1;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->size(), output);
  }

  // required string c_type = 2;
  if (has_c_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c_type().data(), this->c_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->c_type(), output);
  }

  // required .VariableType.Type.metaType kind = 3;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->kind(), output);
  }

  // optional .VariableType.Type element_type = 4;
  if (has_element_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->element_type(), output);
  }

  // optional int64 count = 5;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }

  // repeated .VariableType.FieldType member_list = 6;
  for (int i = 0; i < this->member_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->member_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.Type)
}

::google::protobuf::uint8* Type::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.Type)
  // required int64 size = 1;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->size(), target);
  }

  // required string c_type = 2;
  if (has_c_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->c_type().data(), this->c_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "c_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->c_type(), target);
  }

  // required .VariableType.Type.metaType kind = 3;
  if (has_kind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->kind(), target);
  }

  // optional .VariableType.Type element_type = 4;
  if (has_element_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->element_type(), target);
  }

  // optional int64 count = 5;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }

  // repeated .VariableType.FieldType member_list = 6;
  for (int i = 0; i < this->member_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->member_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.Type)
  return target;
}

int Type::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 size = 1;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->size());
    }

    // required string c_type = 2;
    if (has_c_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->c_type());
    }

    // required .VariableType.Type.metaType kind = 3;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional .VariableType.Type element_type = 4;
    if (has_element_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->element_type());
    }

    // optional int64 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->count());
    }

  }
  // repeated .VariableType.FieldType member_list = 6;
  total_size += 1 * this->member_list_size();
  for (int i = 0; i < this->member_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->member_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Type* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Type*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_list_.MergeFrom(from.member_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_c_type()) {
      set_c_type(from.c_type());
    }
    if (from.has_kind()) {
      set_kind(from.kind());
    }
    if (from.has_element_type()) {
      mutable_element_type()->::VariableType::Type::MergeFrom(from.element_type());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_element_type()) {
    if (!this->element_type().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->member_list())) return false;
  return true;
}

void Type::Swap(Type* other) {
  if (other != this) {
    std::swap(size_, other->size_);
    std::swap(c_type_, other->c_type_);
    std::swap(kind_, other->kind_);
    std::swap(element_type_, other->element_type_);
    std::swap(count_, other->count_);
    member_list_.Swap(&other->member_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type_descriptor_;
  metadata.reflection = Type_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FieldType::kFieldOffsetFieldNumber;
const int FieldType::kFieldTypeFieldNumber;
const int FieldType::kFieldNameFieldNumber;
#endif  // !_MSC_VER

FieldType::FieldType()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.FieldType)
}

void FieldType::InitAsDefaultInstance() {
  field_type_ = const_cast< ::VariableType::Type*>(&::VariableType::Type::default_instance());
}

FieldType::FieldType(const FieldType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.FieldType)
}

void FieldType::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  field_offset_ = GOOGLE_LONGLONG(0);
  field_type_ = NULL;
  field_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FieldType::~FieldType() {
  // @@protoc_insertion_point(destructor:VariableType.FieldType)
  SharedDtor();
}

void FieldType::SharedDtor() {
  if (field_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete field_name_;
  }
  if (this != default_instance_) {
    delete field_type_;
  }
}

void FieldType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FieldType_descriptor_;
}

const FieldType& FieldType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

FieldType* FieldType::default_instance_ = NULL;

FieldType* FieldType::New() const {
  return new FieldType;
}

void FieldType::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    field_offset_ = GOOGLE_LONGLONG(0);
    if (has_field_type()) {
      if (field_type_ != NULL) field_type_->::VariableType::Type::Clear();
    }
    if (has_field_name()) {
      if (field_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        field_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FieldType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.FieldType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 field_offset = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &field_offset_)));
          set_has_field_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field_type;
        break;
      }

      // required .VariableType.Type field_type = 2;
      case 2: {
        if (tag == 18) {
         parse_field_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_field_name;
        break;
      }

      // required string field_name = 3;
      case 3: {
        if (tag == 26) {
         parse_field_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field_name().data(), this->field_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "field_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.FieldType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.FieldType)
  return false;
#undef DO_
}

void FieldType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.FieldType)
  // required int64 field_offset = 1;
  if (has_field_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->field_offset(), output);
  }

  // required .VariableType.Type field_type = 2;
  if (has_field_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field_type(), output);
  }

  // required string field_name = 3;
  if (has_field_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->field_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.FieldType)
}

::google::protobuf::uint8* FieldType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.FieldType)
  // required int64 field_offset = 1;
  if (has_field_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->field_offset(), target);
  }

  // required .VariableType.Type field_type = 2;
  if (has_field_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->field_type(), target);
  }

  // required string field_name = 3;
  if (has_field_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field_name().data(), this->field_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "field_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->field_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.FieldType)
  return target;
}

int FieldType::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 field_offset = 1;
    if (has_field_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field_offset());
    }

    // required .VariableType.Type field_type = 2;
    if (has_field_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field_type());
    }

    // required string field_name = 3;
    if (has_field_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FieldType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FieldType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FieldType::MergeFrom(const FieldType& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field_offset()) {
      set_field_offset(from.field_offset());
    }
    if (from.has_field_type()) {
      mutable_field_type()->::VariableType::Type::MergeFrom(from.field_type());
    }
    if (from.has_field_name()) {
      set_field_name(from.field_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FieldType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldType::CopyFrom(const FieldType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldType::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_field_type()) {
    if (!this->field_type().IsInitialized()) return false;
  }
  return true;
}

void FieldType::Swap(FieldType* other) {
  if (other != this) {
    std::swap(field_offset_, other->field_offset_);
    std::swap(field_type_, other->field_type_);
    std::swap(field_name_, other->field_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FieldType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FieldType_descriptor_;
  metadata.reflection = FieldType_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Function::kEntryAddressFieldNumber;
const int Function::kSymbolNameFieldNumber;
#endif  // !_MSC_VER

Function::Function()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VariableType.Function)
}

void Function::InitAsDefaultInstance() {
}

Function::Function(const Function& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VariableType.Function)
}

void Function::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entry_address_ = GOOGLE_LONGLONG(0);
  symbol_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Function::~Function() {
  // @@protoc_insertion_point(destructor:VariableType.Function)
  SharedDtor();
}

void Function::SharedDtor() {
  if (symbol_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete symbol_name_;
  }
  if (this != default_instance_) {
  }
}

void Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Function::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Function_descriptor_;
}

const Function& Function::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variable_5ftype_2eproto();
  return *default_instance_;
}

Function* Function::default_instance_ = NULL;

Function* Function::New() const {
  return new Function;
}

void Function::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    entry_address_ = GOOGLE_LONGLONG(0);
    if (has_symbol_name()) {
      if (symbol_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        symbol_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VariableType.Function)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 entry_address = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &entry_address_)));
          set_has_entry_address();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_symbol_name;
        break;
      }

      // optional string symbol_name = 3;
      case 3: {
        if (tag == 26) {
         parse_symbol_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol_name().data(), this->symbol_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "symbol_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VariableType.Function)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VariableType.Function)
  return false;
#undef DO_
}

void Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VariableType.Function)
  // required int64 entry_address = 2;
  if (has_entry_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->entry_address(), output);
  }

  // optional string symbol_name = 3;
  if (has_symbol_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol_name().data(), this->symbol_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "symbol_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symbol_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VariableType.Function)
}

::google::protobuf::uint8* Function::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VariableType.Function)
  // required int64 entry_address = 2;
  if (has_entry_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->entry_address(), target);
  }

  // optional string symbol_name = 3;
  if (has_symbol_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol_name().data(), this->symbol_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "symbol_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->symbol_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VariableType.Function)
  return target;
}

int Function::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 entry_address = 2;
    if (has_entry_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->entry_address());
    }

    // optional string symbol_name = 3;
    if (has_symbol_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Function::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Function* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Function*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Function::MergeFrom(const Function& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entry_address()) {
      set_entry_address(from.entry_address());
    }
    if (from.has_symbol_name()) {
      set_symbol_name(from.symbol_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Function::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Function::CopyFrom(const Function& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Function::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Function::Swap(Function* other) {
  if (other != this) {
    std::swap(entry_address_, other->entry_address_);
    std::swap(symbol_name_, other->symbol_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Function::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Function_descriptor_;
  metadata.reflection = Function_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace VariableType

// @@protoc_insertion_point(global_scope)
